-- Create Database
CREATE DATABASE IF NOT EXISTS ecommerce;

-- Use Database
USE ecommerce;

-- Create Categories Table
CREATE TABLE categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

-- Create Products Table
CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    category_id INT,
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- Create Customers Table
CREATE TABLE customers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

-- Create Sales Table
CREATE TABLE sales (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT,
    sale_date DATE NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

-- Create Sale Items Table
CREATE TABLE sale_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sale_id INT,
    product_id INT,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (sale_id) REFERENCES sales(id),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

-- Insert Sample Data
INSERT INTO categories (name) VALUES
    ('Electronics'),
    ('Clothing'),
    ('Home Appliances');

INSERT INTO products (name, price, category_id) VALUES
    ('Laptop', 1200.00, 1),
    ('Smartphone', 500.00, 1),
    ('T-Shirt', 25.00, 2),
    ('Washing Machine', 800.00, 3);

INSERT INTO customers (name) VALUES
    ('John Doe'),
    ('Jane Smith');

INSERT INTO sales (customer_id, sale_date) VALUES
    (1, '2023-01-15'),
    (2, '2023-02-20');

INSERT INTO sale_items (sale_id, product_id, quantity, price) VALUES
    (1, 1, 2, 2400.00),
    (1, 3, 3, 75.00),
    (2, 2, 1, 500.00),
    (2, 4, 1, 800.00);

-- Update Sample Data
UPDATE products SET price = 1300.00 WHERE id = 1;

-- Display Relationships
-- Note: Laravel Eloquent automatically manages relationships, so you wouldn't explicitly run SQL queries for relationships in a Laravel application.

-- For example, to retrieve all products in a specific category:
-- SELECT * FROM products WHERE category_id = 1;

-- Or, to retrieve all sale items for a specific sale:
-- SELECT * FROM sale_items WHERE sale_id = 1;
